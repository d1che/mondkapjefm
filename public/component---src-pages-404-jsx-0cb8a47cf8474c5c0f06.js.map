{"version":3,"sources":["webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/404.jsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["m","module","exports","require","default","loader","enqueue","React","createContext","Container","styled","div","props","theme","colorPrimaryDark","Title","h1","Paragraph","p","NotFound","month","season","Date","getMonth","themes","to","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"8EAAA,IAAsBA,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,uHCctBK,QAAOC,QAELC,IAAMC,cAAc,I,wCCTzCC,EAAYC,IAAOC,IAAV,wEAAGD,CAAH,0GAMO,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,oBAKrCC,EAAQL,IAAOM,GAAV,oEAAGN,CAAH,sBAILO,EAAYP,IAAOQ,EAAV,wEAAGR,CAAH,sBAqCAS,UAlBE,WAGf,IAhBIC,EAgBAC,GAhBAD,GAAQ,IAAIE,MAAOC,aAEV,GAAKH,EAAQ,EACjB,SACEA,GAAS,GAAKA,EAAQ,EACxB,SACEA,GAAS,GAAKA,EAAQ,GACxB,SAEA,SAST,OACE,kBAAC,IAAD,CAAeP,MAAOW,IAAOH,IAC3B,kBAAC,IAAD,MACA,kBAACZ,EAAD,KACE,kBAACM,EAAD,4CACA,kBAACE,EAAD,uEACiE,kBAAC,IAAD,CAAMQ,GAAG,KAAT,6BADjE,S,wFC7BOC,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGErB,IAAMsB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-404-jsx-0cb8a47cf8474c5c0f06.js","sourcesContent":["const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport GlobalStyle from '../styles/globalStyle';\nimport themes from '../themes';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: ${props => props.theme.colorPrimaryDark};\n  text-align: center;\n  padding: 1rem;\n`;\n\nconst Title = styled.h1`\n  margin-top: 2rem;\n`;\n\nconst Paragraph = styled.p`\n  margin-top:2rem;\n`;\n\nconst getSeason = () => {\n\n  let month = new Date().getMonth();\n\n  if (month >= 2 && month < 5) {\n    return 'spring';\n  } else if (month >= 5 && month < 8) {\n    return 'summer';\n  } else if (month >= 8 && month < 10) {\n    return 'autumn';\n  } else {\n    return 'winter';\n  };\n};\n\nconst NotFound = () => {\n\n  //let season = \"winter\";\n  let season = getSeason();\n\n  return(\n    <ThemeProvider theme={themes[season]}>\n      <GlobalStyle />\n      <Container>\n        <Title>Ja, deze pagina bestaat dus niet...</Title>\n        <Paragraph>\n          Uhm, wat denk je dat je hier te zoeken hebt? Ga maar gauw weer <Link to=\"/\">terug naar de hoofdpagina</Link>.\n        </Paragraph>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}